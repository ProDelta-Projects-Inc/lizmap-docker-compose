# docker-compose-monitoring.yml
# Extended Lizmap stack with monitoring capabilities
# Place this file in the root of your lizmap-docker-compose directory

version: '3.8'

services:
  # Add these monitoring services to your existing docker-compose setup
  
  # Prometheus - Metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: lizmap_prometheus
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - lizmap
    restart: unless-stopped

  # Grafana - Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: lizmap_grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    ports:
      - "3000:3000"
    networks:
      - lizmap
    restart: unless-stopped

  # Node Exporter - System metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: lizmap_node_exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - lizmap
    restart: unless-stopped

  # Postgres Exporter - Database metrics
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: lizmap_postgres_exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://lizmap:lizmap1234!@postgis:5432/lizmap?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - lizmap
    restart: unless-stopped
    depends_on:
      - postgis

  # Nginx Exporter - Web server metrics
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: lizmap_nginx_exporter
    command:
      - '-nginx.scrape-uri=http://web:8080/nginx_status'
    ports:
      - "9113:9113"
    networks:
      - lizmap
    restart: unless-stopped
    depends_on:
      - web

  # cAdvisor - Container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: lizmap_cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8080:8080"
    networks:
      - lizmap
    restart: unless-stopped
    privileged: true
    devices:
      - /dev/kmsg

  # Loki - Log aggregation
  loki:
    image: grafana/loki:latest
    container_name: lizmap_loki
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki:/etc/loki
      - loki_data:/loki
    command: -config.file=/etc/loki/loki-config.yaml
    networks:
      - lizmap
    restart: unless-stopped

  # Promtail - Log collector
  promtail:
    image: grafana/promtail:latest
    container_name: lizmap_promtail
    volumes:
      - ./monitoring/promtail:/etc/promtail
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/promtail-config.yaml
    networks:
      - lizmap
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data:
  loki_data:

networks:
  lizmap:
    external: true
